/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package icaro.aplicaciones.agentes.componentesInternos.movimientoCtrl.imp;

import icaro.aplicaciones.Rosace.informacion.Coordinate;
import icaro.aplicaciones.Rosace.informacion.VocabularioRosace;
import icaro.infraestructura.entidadesBasicas.procesadorCognitivo.Informe;

/**
 *
 * @author FGarijo
 */
public class test extends javax.swing.JFrame {
    private Coordinate coordActuales, coordDestino;
    private float pendienteRecta;
    private boolean pendienteInfinita = false ;
    private boolean parar = false ;
    private float distanciaArecorrer ;
    private int dirX =0, dirY=0,incrementoDistancia=0;
    private int numeroPuntos = 100;
    private float b ;
    

    /**
     * Creates new form test
     */
    public test() {
        initComponents();
        coordActuales = new Coordinate(this.robot.getX(), robot.getY(), robot.getWidth());
        coordDestino = new Coordinate(this.jLabel2.getX(), jLabel2.getY(), jLabel2.getWidth());
    //     double incrX, incrY;
       double incrX=(coordDestino.x-coordActuales.x);
       double incrY=(coordDestino.y-coordActuales.y);
       if (incrX>0)dirX=1 ;
               else dirX=-1;
       if (incrY>0)dirY=1 ;
               else dirY=-1;
       if (incrX==0)pendienteInfinita= true;
       else {
           pendienteRecta = (float) Math.abs(incrY/incrX);
           this.b = (float) (coordActuales.y -pendienteRecta * coordActuales.x ) ;
       }
        this.distanciaArecorrer =(float) Math.sqrt(incrX*incrX+incrY*incrY);
        // valor de y cuando x vale 0  coordY.y = pendiente * coordActuales.x +coordActuales.y
        
        this.incrementoDistancia= (int)distanciaArecorrer/numeroPuntos +1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        robot = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        robot.setText("robot");

        jLabel2.setText("Objetivo");

        jButton1.setText("avanza");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(robot)
                .addContainerGap(248, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(91, 91, 91)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(robot)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        int incremento;
//        
//        
//        if(coordDestino.x-coordActuales.x>0)incremento=5;else incremento=-5;
//        this.coordActuales.y = pendienteRecta*incremento+ coordActuales.y ;        
//        this.coordActuales.x = coordActuales.x + incremento;
//        
//        robot.setBounds((int)coordActuales.x, (int)coordActuales.y, robot.getWidth(), robot.getHeight());
//        if ( Math.abs(coordActuales.x - coordDestino.x)<2 || Math.abs(coordActuales.y - coordDestino.y)<2)System.out.println("YA");
        //  constIncrX = d/ raizCuadrada(1+t**2)
        double constIncrX,constIncrY;
        if (pendienteInfinita){
            constIncrX = 0;
//            constIncrY= incrementoDistancia;
             this.coordActuales.y = coordActuales.y + incrementoDistancia*dirY;
        }
//            this.coordActuales.y = coordActuales.y+this.dirY*incrementoDistancia;
        else {
            // incremmento de x respecto a distancia recorrida 
//            constIncrX =(incrementoDistancia/ Math.sqrt(1+pendienteRecta*pendienteRecta));
//            this.coordActuales.x = coordActuales.x + incrementoDistancia*dirX;
            this.coordActuales.y = this.coordActuales.y + pendienteRecta*incrementoDistancia*dirY;
              this.coordActuales.x = coordActuales.x + incrementoDistancia*dirX;
              
//            this.coordActuales.y = coordActuales.y + pendienteRecta*incrementoDistancia*dirY - this.b;
//            constIncrY = (this.coordActuales.x +constIncrX)*this.pendienteRecta*dirY;
        }
//        distanciaArecorrer = distanciaArecorrer-incrementoDistancia;
        if (!parar) robot.setBounds((int)coordActuales.x, (int)coordActuales.y, robot.getWidth(), robot.getHeight());
//           if ( (distanciaArecorrer<incrementoDistancia) )
            if ( (coordActuales.x-coordDestino.x)*dirX>=0 &&(coordActuales.y-coordDestino.y)*dirY>=0)
                {parar = true;    
                System.out.println("YA");}
             
//        constIncrY = this.pendienteRecta
//        this.coordActuales.x = coordActuales.x + constIncrX*dirX;
//        this.coordActuales.y = coordActuales.y + pendienteRecta*constIncrX;
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new test().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel robot;
    // End of variables declaration//GEN-END:variables
}
